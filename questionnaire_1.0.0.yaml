---
swagger: "2.0"
info:
  description: "API to invoke the execution of the decision service operation CometDynamicFormsRuleset."
  version: "1.0.0"
  title: "Questionaire"
  x-ibm-name: "questionaire"
host: "brsv2-6d5eefea.ng.bluemix.net"
basePath: "/questionaire"
schemes:
- "https"
consumes:
- "application/json"
produces:
- "application/json"
paths:
  /answers:
    post:
      responses:
        200:
          description: "200 OK"
      parameters:
      - name: "request"
        required: true
        in: "body"
        schema:
          $ref: "#/definitions/CreateAccountRequest"
  /DynamicFormsRuleset/{name}/{currentScreen}:
    get:
      responses:
        200:
          description: "200 OK"
          schema:
            $ref: "#/definitions/Response"
      parameters:
      - name: "name"
        type: "string"
        required: true
        in: "path"
      - name: "currentScreen"
        type: "string"
        required: true
        in: "path"
      - name: "guid"
        type: "string"
        required: true
        in: "query"
definitions:
  Tasks:
    type: "object"
    properties:
      taskInformation:
        type: "array"
        items:
          $ref: "#/definitions/ArtifactInformation"
  Questionnaire:
    type: "object"
    properties:
      name:
        type: "string"
      screens:
        type: "array"
        items:
          $ref: "#/definitions/Screen"
      answeredQuestionsList:
        type: "array"
        items:
          $ref: "#/definitions/AnsweredQuestion"
      currentScreenName:
        type: "string"
  decisionTrace:
    type: "object"
    properties:
      decisionId:
        type: "string"
      requestedRulesetPath:
        type: "string"
      executedRulesetPath:
        type: "string"
      executionDate:
        type: "string"
        format: "date-time"
      executionDuration:
        type: "integer"
      rulesetProperties:
        $ref: "#/definitions/Properties"
      systemProperties:
        $ref: "#/definitions/Properties"
      inetAddress:
        type: "string"
      totalRules:
        type: "integer"
      totalRulesFired:
        type: "integer"
      totalRulesNotFired:
        type: "integer"
      rules:
        $ref: "#/definitions/Rules"
      rulesFired:
        $ref: "#/definitions/Rules"
      rulesNotFired:
        $ref: "#/definitions/Rules"
      totalTasks:
        type: "integer"
      totalTasksExecuted:
        type: "integer"
      totalTasksNotExecuted:
        type: "integer"
      tasks:
        $ref: "#/definitions/Tasks"
      tasksExecuted:
        $ref: "#/definitions/Tasks"
      tasksNotExecuted:
        $ref: "#/definitions/Tasks"
      outputString:
        type: "string"
      inputParameters:
        type: "object"
        additionalProperties:
          type: "object"
      outputParameters:
        type: "object"
        additionalProperties:
          type: "object"
      workingMemory:
        $ref: "#/definitions/DataObjects"
      executionEvents:
        $ref: "#/definitions/ExecutionEvents"
    description: "Trace for the execution of the decision service operation. Contains\
      \ execution details. The information returned in the trace depends on the trace\
      \ filter set in the request."
    xml:
      name: "decisionTrace"
  Screen:
    type: "object"
    properties:
      name:
        type: "string"
      questionsList:
        type: "array"
        items:
          $ref: "#/definitions/Question"
      currentScreen:
        type: "boolean"
        default: false
  Request:
    type: "object"
    properties:
      __DecisionID__:
        type: "string"
        description: "Unique identifier representing the execution of the decision\
          \ service operation. If it is not specified, it will be computed automatically."
      __TraceFilter__:
        $ref: "#/definitions/TraceFilter"
      questionnaireParam:
        $ref: "#/definitions/Questionnaire"
    description: "Request for the execution of the decision service operation. Contains\
      \ notably the input parameters that are used for the execution."
  ExecutionEvents:
    type: "object"
    properties:
      taskEvent:
        type: "array"
        items:
          $ref: "#/definitions/TaskEvent"
      ruleEvent:
        type: "array"
        items:
          $ref: "#/definitions/RuleEvent"
  Error:
    type: "object"
    properties:
      code:
        type: "integer"
        format: "int32"
        description: "HTTP error code."
      message:
        type: "string"
        description: "Error message."
    description: "Error occurring when invoking the execution of the decision service\
      \ operation."
  Properties:
    type: "object"
    properties:
      property:
        type: "array"
        items:
          $ref: "#/definitions/Property"
  RuleEvent:
    type: "object"
    required:
    - "endDate"
    - "priority"
    - "ruleInformation"
    - "startDate"
    properties:
      startDate:
        type: "string"
        format: "date-time"
      priority:
        type: "integer"
      ruleInformation:
        $ref: "#/definitions/ArtifactInformation"
      boundObjects:
        $ref: "#/definitions/DataObjects"
      endDate:
        type: "string"
        format: "date-time"
  Rules:
    type: "object"
    properties:
      ruleInformation:
        type: "array"
        items:
          $ref: "#/definitions/ArtifactInformation"
  Response:
    type: "object"
    properties:
      __DecisionID__:
        type: "string"
        description: "Unique identifier representing the execution of the decision\
          \ service operation. If it is not specified, it will be computed automatically."
      __decisionTrace__:
        $ref: "#/definitions/decisionTrace"
      questionnaireParam:
        $ref: "#/definitions/Questionnaire"
    description: "Response for the execution of the decision service operation. Contains\
      \ notably the output parameters that are returned by the execution."
  DataObject:
    type: "object"
    properties:
      content:
        type: "array"
        items:
          type: "object"
      serializer:
        type: "string"
        xml:
          attribute: true
  TaskEvent:
    type: "object"
    required:
    - "endDate"
    - "executionEvents"
    - "startDate"
    - "taskInformation"
    properties:
      startDate:
        type: "string"
        format: "date-time"
      taskInformation:
        $ref: "#/definitions/ArtifactInformation"
      executionEvents:
        $ref: "#/definitions/ExecutionEvents"
      endDate:
        type: "string"
        format: "date-time"
  TraceFilter:
    type: "object"
    properties:
      infoRulesetProperties:
        type: "boolean"
        default: false
      infoOutputString:
        type: "boolean"
        default: false
      infoInputParameters:
        type: "boolean"
        default: false
      infoOutputParameters:
        type: "boolean"
        default: false
      none:
        type: "boolean"
        default: false
      infoExecutionEventsAsked:
        type: "boolean"
        default: false
      workingMemoryFilter:
        type: "string"
      infoBoundObjectByRule:
        type: "boolean"
        default: false
      infoExecutionDuration:
        type: "boolean"
        default: false
      infoExecutionDate:
        type: "boolean"
        default: false
      infoExecutionEvents:
        type: "boolean"
        default: false
      infoInetAddress:
        type: "boolean"
        default: false
      infoRules:
        type: "boolean"
        default: false
      infoRulesNotFired:
        type: "boolean"
        default: false
      infoSystemProperties:
        type: "boolean"
        default: false
      infoTasks:
        type: "boolean"
        default: false
      infoTasksNotExecuted:
        type: "boolean"
        default: false
      infoTotalRulesFired:
        type: "boolean"
        default: false
      infoTotalRulesNotFired:
        type: "boolean"
        default: false
      infoTotalTasksExecuted:
        type: "boolean"
        default: false
      infoTotalTasksNotExecuted:
        type: "boolean"
        default: false
      infoWorkingMemory:
        type: "boolean"
        default: false
      infoRulesFired:
        type: "boolean"
        default: false
      infoTasksExecuted:
        type: "boolean"
        default: false
      infoBoundObjectSerializationType:
        type: "string"
        enum:
        - "JAXB"
        - "ToString"
        - "ClassName"
    description: "Trace filter for the execution of the decision service operation.\
      \ Allows to determine the execution details that should be extracted and returned\
      \ in the response."
  AnsweredQuestion:
    type: "object"
    properties:
      fieldName:
        type: "string"
      value:
        type: "string"
      entityName:
        properties: {}
        type: "string"
      answerType:
        type: "string"
        enum:
        - "TEXT"
        - "NUMERIC"
        - "BOOLEAN"
        - "DATE"
      entityId:
        properties: {}
        type: "string"
  Question:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int32"
      entityName:
        type: "string"
      fieldName:
        type: "string"
      label:
        type: "string"
      type:
        type: "string"
        enum:
        - "TEXT"
        - "NUMERIC"
        - "BOOLEAN"
        - "DATE"
        - "ENUMERATION"
      answerChoicesList:
        type: "array"
        items:
          type: "string"
  ArtifactInformation:
    type: "object"
    required:
    - "businessName"
    - "name"
    properties:
      name:
        type: "string"
      businessName:
        type: "string"
      properties:
        $ref: "#/definitions/Properties"
  Property:
    type: "object"
    properties:
      value:
        type: "string"
      name:
        type: "string"
        xml:
          attribute: true
  DataObjects:
    type: "object"
    properties:
      object:
        type: "array"
        items:
          $ref: "#/definitions/DataObject"
  CreateAccountRequest:
    properties:
      answeredQuestionsList:
        type: "array"
        items:
          $ref: "#/definitions/AnsweredQuestion"
    additionalProperties: false
x-ibm-configuration:
  enforced: true
  testable: true
  phase: "realized"
  cors:
    enabled: true
  assembly:
    execute:
    - operation-switch:
        title: "operation-switch"
        case:
        - operations:
          - verb: "get"
            path: "/DynamicFormsRuleset/{name}/{currentScreen}"
          execute:
          - map:
              title: "map"
              inputs:
                name:
                  schema:
                    type: "string"
                  variable: "request.parameters.name"
                currentScreen:
                  schema:
                    type: "string"
                  variable: "request.parameters.currentScreen"
                guid:
                  schema:
                    type: "string"
                  variable: "request.parameters.guid"
              outputs:
                output:
                  schema:
                    $ref: "#/definitions/Request"
                  variable: "message.body"
                  content: "application/json"
              actions:
              - set: "output.__DecisionID__"
                from: "guid"
              - set: "output.questionnaireParam.name"
                from: "name"
              - set: "output.questionnaireParam.currentScreenName"
                from: "currentScreen"
                default: "undefined"
              version: "1.0.0"
          - invoke:
              title: "invoke"
              timeout: 60
              verb: "POST"
              cache-response: "protocol"
              cache-ttl: 900
              stop-on-error:
              - null
              version: "1.0.0"
              target-url: "http://169.53.20.119/DecisionService/rest/v1/CometDynamicFormsRuleApp/CometDynamicFormsRuleset"
              username: "resAdmin"
              password: "urxxj56vds9u"
        - operations:
          - verb: "post"
            path: "/answers"
          execute:
          - gatewayscript:
              title: "gatewayscript"
              version: "1.0.0"
              source: "var apic = require('local:///isp/policy/apim.custom.js');\n\
                \nvar incomingRequest = apic.getvariable('request.body');\n\nvar driver\
                \ = {};\nvar vehicle = {};\nvar coverage = {};\n\nvar obj = \"\";\n\
                \nvar incomingArray = incomingRequest.answeredQuestionsList;\n\nvar\
                \ arrayLength =  incomingArray.length;\n\nfor (var i = 0; i < arrayLength;\
                \ i++) {\n    var cur = incomingArray[i];\n    \n    switch (cur.entityName){\n\
                \        case \"vehicle\":\n            vehicle[cur.fieldName] = cur.value;\n\
                \            apic.setvariable('node.endpoint','https://comet-vehicle.mybluemix.net/vehicle/');\n\
                \            break;\n        case \"account\":\n            driver[cur.fieldName]\
                \ = cur.value;\n            apic.setvariable('node.endpoint','https://comet-account.mybluemix.net/account/');\n\
                \            break;\n       case \"policy\":\n            coverage[cur.fieldName]\
                \ = cur.value;\n            apic.setvariable('node.endpoint','https://comet-coverage.mybluemix.net/policy');\n\
                \            break;\n    }\n}\n\nvar wrapper = {};\n\nswitch (incomingArray[0].entityName){\n\
                \    case \"vehicle\":\n        wrapper.vehicle = vehicle;\n     \
                \   break;\n    case \"account\":\n            wrapper.driver = driver;\n\
                \        break;\n    case \"policy\":\n        wrapper.policy = coverage;\n\
                \        break;\n    \n}\n\n\napic.setvariable('message.body', wrapper);\n\
                apic.setvariable('message.headers.content-type', 'application/json');"
          - invoke:
              title: "invoke"
              timeout: 60
              verb: "POST"
              cache-response: "protocol"
              cache-ttl: 900
              stop-on-error:
              - null
              version: "1.0.0"
              target-url: "$(node.endpoint)"
        otherwise: []
        version: "1.0.0"
    catch: []
securityDefinitions:
  api-key-1:
    type: "apiKey"
    description: ""
    in: "header"
    name: "X-IBM-Client-Id"
security:
- api-key-1: []
